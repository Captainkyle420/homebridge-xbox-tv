{
	"pluginAlias": "XboxTv",
	"pluginType": "platform",
	"singular": true,
	"fixArrays": true,
	"customUi": true,
	"headerDisplay": "This plugin works with Xbox game Consoles. Devices are exposed to HomeKit as separate accessories and each needs to be manually paired.\n\n1. Open the Home <img src='https://user-images.githubusercontent.com/3979615/78010622-4ea1d380-738e-11ea-8a17-e6a465eeec35.png' height='16.42px'> app on your device.\n2. Tap the <img src='https://user-images.githubusercontent.com/3979615/78010869-9aed1380-738e-11ea-9644-9f46b3633026.png' height='16.42px'>.\n3. Tap *Add Accessory*, and select *I Don't Have a Code or Cannot Scan* or *More Options*.\n4. Select Your accessory and press add anyway.\n5. Enter the PIN or scan the QR code, this can be found in Homebridge UI or Homebridge logs.\n6. Complete the accessory setup.",
	"footerDisplay": "For documentation please see [GitHub repository](https://github.com/grzegorz914/homebridge-xbox-tv).",
	"schema": {
		"type": "object",
		"properties": {
			"devices": {
				"type": "array",
				"items": {
					"title": "Device",
					"type": "object",
					"properties": {
						"name": {
							"title": "Name",
							"type": "string",
							"placeholder": "Game console",
							"required": true
						},
						"host": {
							"title": "IP/Hostname",
							"type": "string",
							"placeholder": "192.168.1.6",
							"format": "hostname",
							"required": true
						},
						"xboxLiveId": {
							"title": "Live ID",
							"type": "string",
							"placeholder": "FD00000000000000",
							"description": "Xbox Live ID",
							"required": true
						},
						"webApiControl": {
							"title": "Web Api",
							"type": "boolean",
							"default": false,
							"description": "This enable console control over Web Api.",
							"required": false
						},
						"getInputsFromDevice": {
							"title": "Load Inputs From Device",
							"type": "boolean",
							"default": false,
							"description": "This function get all available inputs direct from device, manually configured inputs will be skipped.",
							"required": false,
							"condition": {
								"functionBody": "return model.devices[arrayIndices].webApiControl === true;"
							}
						},
						"filterGames": {
							"title": "Hide Games",
							"type": "boolean",
							"default": false,
							"description": "If enabled, Games will not be displayed on the list of inputs.",
							"required": false
						},
						"filterApps": {
							"title": "Hide Apps",
							"type": "boolean",
							"default": false,
							"description": "If enabled, Apps will not be displayed on the list of inputs.",
							"required": false
						},
						"filterSystemApps": {
							"title": "Hide System Apps",
							"type": "boolean",
							"default": false,
							"description": "If enabled, System Apps (Accessory, TV, Network Troubleshooter, Xbox Guide) will not be displayed on the list of inputs.",
							"required": false
						},
						"filterDlc": {
							"title": "Hide DLC",
							"type": "boolean",
							"default": false,
							"description": "If enabled, DLC will not be displayed on the list of inputs.",
							"required": false
						},
						"inputs": {
							"type": "array",
							"items": {
								"title": "Input",
								"type": "object",
								"properties": {
									"name": {
										"title": "Name",
										"type": "string",
										"placeholder": "Input name",
										"description": "Here set Your own name.",
										"required": true
									},
									"titleId": {
										"title": "Title Id",
										"type": "string",
										"placeholder": "Input Title Id",
										"description": "Here set title Id. If web api is enable all available in */var/lib/homebridge/xboxTv/inputs_xxxxxx* file.",
										"required": false
									},
									"reference": {
										"title": "Reference",
										"type": "string",
										"placeholder": "Input reference",
										"description": "Here set reference. If web api is enable all available in */var/lib/homebridge/xboxTv/inputs_xxxxxx* file.",
										"required": true
									},
									"oneStoreProductId": {
										"title": "Product Id",
										"type": "string",
										"placeholder": "oneStoreProductId",
										"description": "Here set the *oneStoreProductId*. If web api enable, switch app/games will be possible, all available in */var/lib/homebridge/xboxTv/inputs_xxxxxx* file.",
										"required": false,
										"condition": {
											"functionBody": "return model.devices[arrayIndices].webApiControl === true;"
										}
									},
									"contentType": {
										"title": "Content Type",
										"type": "string",
										"description": "Here select source input type.",
										"oneOf": [
											{
												"title": "Game",
												"enum": [
													"Game"
												]
											},
											{
												"title": "Application",
												"enum": [
													"App"
												]
											},
											{
												"title": "System Appliction",
												"enum": [
													"System App"
												]
											},
											{
												"title": "Dlc",
												"enum": [
													"Dlc"
												]
											}
										],
										"required": true
									}
								}
							}
						},
						"buttons": {
							"type": "array",
							"items": {
								"title": "Button",
								"type": "object",
								"properties": {
									"name": {
										"title": "Name",
										"type": "string",
										"placeholder": "Button name",
										"description": "Here set Your own name.",
										"required": false
									},
									"command": {
										"title": "Command / Mode",
										"type": "string",
										"oneOf": [
											{
												"title": "Media Play",
												"enum": [
													"play"
												]
											},
											{
												"title": "Media Pause",
												"enum": [
													"pause"
												]
											},
											{
												"title": "Media Play/Pause",
												"enum": [
													"playPause"
												]
											},
											{
												"title": "Media Stop",
												"enum": [
													"stop"
												]
											},
											{
												"title": "Media Record",
												"enum": [
													"record"
												]
											},
											{
												"title": "Media Next Track",
												"enum": [
													"nextTrack"
												]
											},
											{
												"title": "Media Previous Track",
												"enum": [
													"prevTrack"
												]
											},
											{
												"title": "Media Fast Forward",
												"enum": [
													"fastForward"
												]
											},
											{
												"title": "Media Rewind",
												"enum": [
													"rewind"
												]
											},
											{
												"title": "Media Channel Up",
												"enum": [
													"channelUp"
												]
											},
											{
												"title": "Media Channel Down",
												"enum": [
													"channelDown"
												]
											},
											{
												"title": "Media Back",
												"enum": [
													"back"
												]
											},
											{
												"title": "Media View",
												"enum": [
													"view"
												]
											},
											{
												"title": "Media Menu",
												"enum": [
													"menu"
												]
											},
											{
												"title": "Media Seek",
												"enum": [
													"seek"
												]
											},
											{
												"title": "Game Pad Nexus",
												"enum": [
													"nexus"
												]
											},
											{
												"title": "Game Pad View",
												"enum": [
													"view"
												]
											},
											{
												"title": "Game Pad Menu",
												"enum": [
													"menu"
												]
											},
											{
												"title": "Game Pad A",
												"enum": [
													"a"
												]
											},
											{
												"title": "Game Pad B",
												"enum": [
													"b"
												]
											},
											{
												"title": "Game Pad X",
												"enum": [
													"x"
												]
											},
											{
												"title": "Game Pad Y",
												"enum": [
													"y"
												]
											},
											{
												"title": "Game Pad Up",
												"enum": [
													"up"
												]
											},
											{
												"title": "Game Pad Down",
												"enum": [
													"down"
												]
											},
											{
												"title": "Game Pad Left",
												"enum": [
													"left"
												]
											},
											{
												"title": "Game Pad Right",
												"enum": [
													"right"
												]
											},
											{
												"title": "Volume Up",
												"enum": [
													"volUp"
												]
											},
											{
												"title": "Volume Down",
												"enum": [
													"volDown"
												]
											},
											{
												"title": "Mute",
												"enum": [
													"volMute"
												]
											},
											{
												"title": "Record Game DVR",
												"enum": [
													"recordGameDvr"
												]
											},
											{
												"title": "Reboot",
												"enum": [
													"reboot"
												]
											},
											{
												"title": "Switch App/Game",
												"enum": [
													"switchAppGame"
												]
											}
										],
										"description": "Here select the command or mode of button.",
										"required": true
									},
									"oneStoreProductId": {
										"title": "Product Id",
										"type": "string",
										"placeholder": "oneStoreProductId",
										"description": "Here set the *oneStoreProductId*. If web api enabled, switch app/games will be possible, all available in */var/lib/homebridge/xboxTv/inputs_xxxxxx* file.",
										"required": true,
										"condition": {
											"functionBody": "return model.devices[arrayIndices].webApiControl === true;"
										}
									},
									"displayType": {
										"title": "Display Type",
										"type": "integer",
										"oneOf": [
											{
												"title": "None/Disabled",
												"enum": [
													-1
												]
											},
											{
												"title": "Outlet",
												"enum": [
													0
												]
											},
											{
												"title": "Switch",
												"enum": [
													1
												]
											}
										],
										"description": "Here select display type in HomeKit app.",
										"required": true
									}
								}
							}
						},
						"sensorPower": {
							"title": "Power",
							"type": "boolean",
							"default": false,
							"description": "This expose Power as a Motion Sensor.",
							"required": false
						},
						"sensorInput": {
							"title": "Input",
							"type": "boolean",
							"default": false,
							"description": "This expose Input as a Motion Sensor.",
							"required": false
						},
						"sensorScreenSaver": {
							"title": "Screen Saver",
							"type": "boolean",
							"default": false,
							"description": "This expose Screen Saver as a Motion Sensor.",
							"required": false
						},
						"sensorInputs": {
							"type": "array",
							"items": {
								"title": "Inputs",
								"type": "object",
								"description": "Here create Input/App Sensors based on reference, sensor will active if switch to it.",
								"properties": {
									"name": {
										"title": "Name",
										"type": "string",
										"placeholder": "Name",
										"description": "Here set Your own name.",
										"required": true
									},
									"reference": {
										"title": "Reference",
										"type": "string",
										"placeholder": "Input/App reference",
										"description": "Here set the Input/App reference.",
										"required": true
									},
									"displayType": {
										"title": "Type",
										"type": "integer",
										"oneOf": [
											{
												"title": "None/Disabled",
												"enum": [
													-1
												]
											},
											{
												"title": "Motion Sensor",
												"enum": [
													0
												]
											},
											{
												"title": "Occupancy Sensor",
												"enum": [
													1
												]
											},
											{
												"title": "Contact Sensor",
												"enum": [
													2
												]
											}
										],
										"description": "Here select sensor type to be exposed in HomeKit app.",
										"required": true
									}
								}
							}
						},
						"webApiPowerOnOff": {
							"title": "Power Control",
							"type": "boolean",
							"default": false,
							"description": "This enable power control over Web Api.",
							"required": false,
							"condition": {
								"functionBody": "return model.devices[arrayIndices].webApiControl === true;"
							}
						},
						"webApiRcControl": {
							"title": "Remote Control",
							"type": "boolean",
							"default": false,
							"description": "This enable game pad control over Web Api.",
							"required": false,
							"condition": {
								"functionBody": "return model.devices[arrayIndices].webApiControl === true;"
							}
						},
						"webApiVolumeControl": {
							"title": "Volume Control",
							"type": "boolean",
							"default": false,
							"description": "This enable volume/mute control over Web Api.",
							"required": false,
							"condition": {
								"functionBody": "return model.devices[arrayIndices].webApiControl === true;"
							}
						},
						"webApiToken": {
							"title": "Web Api Token",
							"type": "string",
							"placeholder": "Web Api Token",
							"description": "Here put the reponse Token (value after ?code=) from the authorization URL.",
							"required": true,
							"condition": {
								"functionBody": "return model.devices[arrayIndices].webApiControl === true;"
							}
						},
						"webApiClientId": {
							"title": "Client Id",
							"type": "string",
							"placeholder": "a34ac209-edab-4b08-91e7-a4558d8da1bd",
							"description": "Here set your own Client Id from Azure AD or leave empty if you do not have own account.",
							"required": false,
							"condition": {
								"functionBody": "return model.devices[arrayIndices].webApiControl === true;"
							}
						},
						"webApiClientSecret": {
							"title": "Client Secret",
							"type": "string",
							"placeholder": "Client Secret",
							"description": "Here set your Client Secret from Azure AD or leave empty if you do not have own account.",
							"required": false,
							"condition": {
								"functionBody": "return model.devices[arrayIndices].webApiControl === true;"
							}
						},
						"enableDebugMode": {
							"title": "Debug",
							"type": "boolean",
							"default": false,
							"description": "This enable debug mode.",
							"required": false
						},
						"disableLogInfo": {
							"title": "Disable Log Info",
							"type": "boolean",
							"default": false,
							"description": "This disable logging values and states on every it change.",
							"required": false
						},
						"disableLogDeviceInfo": {
							"title": "Disable Log Device Info",
							"type": "boolean",
							"default": false,
							"description": "This disable log device info by every connections device to the network.",
							"required": false
						},
						"infoButtonCommand": {
							"title": "Info Button",
							"type": "string",
							"oneOf": [
								{
									"title": "Game Pad View",
									"enum": [
										"view"
									]
								},
								{
									"title": "Game Pad Nexus",
									"enum": [
										"nexus"
									]
								},
								{
									"title": "Game Pad Menu",
									"enum": [
										"menu"
									]
								},
								{
									"title": "Game Pad A",
									"enum": [
										"a"
									]
								},
								{
									"title": "Game Pad B",
									"enum": [
										"b"
									]
								},
								{
									"title": "Game Pad X",
									"enum": [
										"x"
									]
								},
								{
									"title": "Game Pad Y",
									"enum": [
										"y"
									]
								}
							],
							"description": "Here select the function of info button in RC.",
							"required": true
						},
						"volumeControl": {
							"title": "Volume Control",
							"type": "integer",
							"description": "Here select what a volume control mode You want to use. If select *None/Disabled* only hardware buttons in RC app can be used to control volume.",
							"oneOf": [
								{
									"title": "None/Disabled",
									"enum": [
										-1
									]
								},
								{
									"title": "Slider",
									"enum": [
										0
									]
								},
								{
									"title": "Fan",
									"enum": [
										1
									]
								}
							],
							"required": true
						},
						"enableRestFul": {
							"title": "Enable",
							"type": "boolean",
							"default": false,
							"required": false,
							"description": "This enable RESTful server."
						},
						"restFulDebug": {
							"title": "Debug",
							"type": "boolean",
							"default": false,
							"required": false,
							"description": "This enable debug mode for RESTFul.",
							"condition": {
								"functionBody": "return model.devices[arrayIndices].enableRestFul === true;"
							}
						},
						"restFulPort": {
							"title": "Port",
							"type": "integer",
							"placeholder": 3000,
							"required": true,
							"description": "Here set the listening Port for RESTful server.",
							"condition": {
								"functionBody": "return model.devices[arrayIndices].enableRestFul === true;"
							}
						},
						"enableMqtt": {
							"title": "Enable",
							"type": "boolean",
							"default": false,
							"required": false,
							"description": "This enable MQTT client."
						},
						"mqttDebug": {
							"title": "Debug",
							"type": "boolean",
							"default": false,
							"required": false,
							"description": "This enable debug mode for MQTT.",
							"condition": {
								"functionBody": "return model.devices[arrayIndices].enableMqtt === true;"
							}
						},
						"mqttHost": {
							"title": "IP/Hostname",
							"type": "string",
							"placeholder": "ip or hostname",
							"required": true,
							"format": "hostname",
							"description": "Here set the IP/Hostname of MQTT Broker.",
							"condition": {
								"functionBody": "return model.devices[arrayIndices].enableMqtt === true;"
							}
						},
						"mqttPort": {
							"title": "Port",
							"type": "integer",
							"placeholder": 1883,
							"required": true,
							"description": "Here set the port of MQTT Broker.",
							"condition": {
								"functionBody": "return model.devices[arrayIndices].enableMqtt === true;"
							}
						},
						"mqttPrefix": {
							"title": "Prefix",
							"type": "string",
							"placeholder": "home/xbox",
							"required": false,
							"description": "Here set the prefix.",
							"condition": {
								"functionBody": "return model.devices[arrayIndices].enableMqtt === true;"
							}
						},
						"mqttAuth": {
							"title": "Authorization",
							"type": "boolean",
							"default": false,
							"required": false,
							"description": "This enable authorization for MQTT Broker.",
							"condition": {
								"functionBody": "return model.devices[arrayIndices].enableMqtt === true;"
							}
						},
						"mqttUser": {
							"title": "User",
							"type": "string",
							"placeholder": "user",
							"required": false,
							"description": "Here set the user of MQTT Broker.",
							"condition": {
								"functionBody": "return model.devices[arrayIndices].enableMqtt === true && model.devices[arrayIndices].mqttAuth === true;"
							}
						},
						"mqttPasswd": {
							"title": "Password",
							"type": "string",
							"placeholder": "password",
							"required": false,
							"description": "Here set the password of MQTT Broker.",
							"condition": {
								"functionBody": "return model.devices[arrayIndices].enableMqtt === true && model.devices[arrayIndices].mqttAuth === true;"
							}
						}
					}
				}
			}
		}
	},
	"layout": [
		{
			"key": "devices",
			"type": "tabarray",
			"title": "{{ value.name || 'new device' }}",
			"items": [
				"devices[].name",
				"devices[].host",
				"devices[].xboxLiveId",
				{
					"key": "devices[]",
					"type": "section",
					"title": "Inputs",
					"expandable": true,
					"expanded": false,
					"items": [
						"devices[].getInputsFromDevice",
						"devices[].filterGames",
						"devices[].filterApps",
						"devices[].filterSystemApps",
						"devices[].filterDlc",
						{
							"key": "devices[].inputs",
							"type": "tabarray",
							"title": "{{ value.name || 'new input' }}",
							"items": [
								"devices[].inputs[].name",
								"devices[].inputs[].reference",
								"devices[].inputs[].oneStoreProductId",
								"devices[].inputs[].contentType"
							],
							"condition": {
								"functionBody": "return model.devices && model.devices[arrayIndices].getInputsFromDevice === false || model.devices[arrayIndices].webApiControl === false;"
							}
						}
					]
				},
				{
					"key": "devices[]",
					"type": "section",
					"title": "Buttons",
					"expandable": true,
					"expanded": false,
					"items": [
						{
							"key": "devices[].buttons",
							"type": "tabarray",
							"title": "{{ value.name || 'new button' }}",
							"items": [
								"devices[].buttons[].name",
								"devices[].buttons[].command",
								"devices[].buttons[].oneStoreProductId",
								"devices[].buttons[].displayType"
							]
						}
					]
				},
				{
					"key": "devices[]",
					"type": "section",
					"title": "Advanced Settings",
					"expandable": true,
					"expanded": false,
					"items": [
						{
							"key": "devices[]",
							"type": "tabarray",
							"title": "{{ value.title }}",
							"items": [
								{
									"key": "devices[]",
									"title": "Sensors",
									"items": [
										"devices[].sensorPower",
										"devices[].sensorScreenSaver",
										"devices[].sensorInput",
										{
											"key": "devices[]",
											"type": "section",
											"title": "Custom Inputs",
											"expandable": true,
											"expanded": false,
											"items": [
												{
													"key": "devices[].sensorInputs",
													"type": "tabarray",
													"title": "{{ value.name || 'new sensor' }}",
													"items": [
														"devices[].sensorInputs[].name",
														"devices[].sensorInputs[].reference",
														"devices[].sensorInputs[].displayType"
													]
												}
											]
										}
									]
								},
								{
									"key": "devices[]",
									"title": "Web Api",
									"items": [
										"devices[].webApiControl",
										"devices[].webApiPowerOnOff",
										"devices[].webApiRcControl",
										"devices[].webApiVolumeControl",
										"devices[].webApiToken",
										"devices[].webApiClientId",
										"devices[].webApiClientSecret"
									]
								},
								{
									"key": "devices[]",
									"title": "System",
									"items": [
										"devices[].enableDebugMode",
										"devices[].disableLogInfo",
										"devices[].disableLogDeviceInfo",
										"devices[].infoButtonCommand",
										"devices[].volumeControl"
									]
								},
								{
									"key": "devices[]",
									"title": "External Integrations",
									"items": [
										{
											"key": "devices[]",
											"type": "tabarray",
											"title": "{{ value.title }}",
											"items": [
												{
													"key": "devices[]",
													"title": "RESTFul",
													"items": [
														"devices[].enableRestFul",
														"devices[].restFulDebug",
														"devices[].restFulPort"
													]
												},
												{
													"key": "devices[]",
													"title": "MQTT",
													"items": [
														"devices[].enableMqtt",
														"devices[].mqttDebug",
														"devices[].mqttHost",
														"devices[].mqttPort",
														"devices[].mqttPrefix",
														"devices[].mqttAuth",
														"devices[].mqttUser",
														"devices[].mqttPasswd"
													]
												}
											]
										}
									]
								}
							]
						}
					]
				}
			]
		}
	]
}